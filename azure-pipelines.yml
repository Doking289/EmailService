trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

name: $(BuildID)

variables:
  nuget_package_number: '1.0.$(Build.BuildId)'

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: 'src'
    feedsToUse: 'select'
    versioningScheme: 'off'
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: 'src/EmailService.Client/Client.csproj;src/PublicAPI/PublicAPI.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'nuget_package_number'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: src/EmailService/EmailService.csproj
    arguments: '--no-restore -o $(Build.ArtifactStagingDirectory)' 
    zipAfterPublish: false
    modifyOutputPath: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: emailservice-build'
  inputs:
    ArtifactName: 'emailservice-build'

- task: CopyFiles@2
  displayName: 'copy deploy artifact'
  inputs:
    SourceFolder: 'deploy'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: emailservice-deploy'
  inputs:
    ArtifactName: 'emailservice-deploy'